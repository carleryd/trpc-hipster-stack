openapi: 3.0.0
info:
  title: Full Example API (v2)
  version: 2.0.0
paths:
  /users:
    get:
      summary: List users
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 50 # more strict
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /users/create:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: User created

  /users/{id}/status:
    patch:
      summary: Update user status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [active, inactive] # Removed banned
      responses:
        "200":
          description: OK

components:
  schemas:
    User:
      type: object
      required: [id, name]
      properties:
        id:
          type: integer # Breaking: was string
        name:
          type: string
        status:
          type: string
          enum: [active, inactive]
        profile:
          nullable: true
          $ref: "#/components/schemas/Profile"

    UserInput:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            password:
              type: string
              minLength: 10 # Breaking: was 8

    Profile:
      type: object
      properties:
        age:
          type: integer
        interests:
          type: array
          items:
            type: string
        # Removed location
